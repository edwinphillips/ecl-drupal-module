<?php

module_load_include('inc', 'ecl', 'functions');
module_load_include('inc', 'ecl', 'forms');

/**
 * Implements hook_permission().
 */
function ecl_permission() {
  return array(
    'Modify English College London settings' =>  array(
      'title' => t('Modify English College London settings'),
      'description' => t('Administer English College London settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ecl_menu() {

  $items = array();

  $items['admin/settings/ecl'] = array(
    'title' => 'English College London',
    'description' => 'English College London module overview',
    'page arguments' => array('ecl_overview'),
    'access arguments' => array('Modify English College London settings'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/settings/ecl/options'] = array(
    'title' => 'Options',
    'weight' => 0,
    'description' => 'English College London module options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecl_admin'),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ecl/coursebookings'] = array(
    'title' => 'Bookings',
    'weight' => 1,
    'description' => 'English College London Show Course Bookings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecl_show_course_bookings'),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ecl/coursebookings/%'] = array(
    'title' => 'Course Booking',
    'description' => 'English College London Show Course Booking Information',
    'page callback' => 'ecl_show_course_booking_details',
    'page arguments' => array(4),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/settings/ecl/coursebookings/%/payment'] = array(
    'title' => 'Make Course Booking Payment',
    'description' => 'English College London Make Course Booking Payment',
    'page callback' => 'ecl_make_course_booking_payment',
    'page arguments' => array(4),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_admin().
 */
function ecl_admin() {

  $form = array();

  $form['online_payment_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Online payment options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['online_payment_options']['online_payment_functionality'] = array(
    '#type' => 'select',
    '#title' => t('Online payment functionality'),
    '#options' => array(
      0 => t('Disabled'),
      1 => t('Enabled'),
    ),
    '#default_value' => variable_get('online_payment_functionality', 0),
    '#description' => t('Whether or not the payment functionality is enabled.'),
    '#required' => TRUE,
  );

  $form['worldpay_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Worldpay options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['worldpay_options']['worldpay_mode'] = array(
    '#type' => 'select',
    '#title' => t('Worldpay mode'),
    '#options' => array(
      0 => t('Test'),
      1 => t('Live'),
    ),
    '#default_value' => variable_get('worldpay_mode', 0),
    '#description' => t('The Worldpay system used to process payments.'),
    '#required' => TRUE,
  );

  $form['course_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Course options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['course_options']['default_course_price'] = array(
    '#type' => 'textfield',
    '#title' => t('Default Course Price (Â£)'),
    '#default_value' => variable_get('default_course_price', '100'),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => t("The default price for a course if not specified using the 'Price' field of the 'Course' content type."),
    '#required' => TRUE,
  );

  $form['course_options']['places_on_courses'] = array(
    '#type' => 'textfield',
    '#title' => t('Places on courses'),
    '#default_value' => variable_get('places_on_courses', '20'),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("The number of available places on courses."),
    '#required' => TRUE,
  );

  $form['emails'] = array(
    '#type' => 'fieldset',
    '#title' => t('Emails'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['emails']['booking_notifications'] = array(
    '#type' => 'textfield',
    '#title' => t('Booking Notification Email'),
    '#default_value' => variable_get('booking_notifications', 'info@englishcollegelondon.co.uk'),
    '#size' => 64,
    '#maxlength' => 64,
    '#description' => t("The email address where booking notification emails are sent."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_webform_submission_insert().
 */
function ecl_webform_submission_insert($node, $submission) {
  global $base_root;

  $formelements = array();
  foreach ($node->webform['components'] as $key => $value) {
    if ($value['form_key'] != 'message') {
      if ($value['form_key'] == 'course_interested') {
        $query = db_select('field_revision_field_price', 'p');
        $query->join('node', 'n', 'n.vid = p.revision_id');
        $result = $query->fields('p', array('field_price_value'))
            ->condition('n.title', $submission->data[$key][0])
            ->execute()
            ->fetchAssoc();
        $coursefee = (isset($result['field_price_value']) && $result['field_price_value'] > 0)
                ? $result['field_price_value'] : variable_get('default_course_price', '100');
      }
      $formelements[$value['form_key']] = array(
        'name' => $value['name'],
        'value' => $submission->data[$key][0]
      );
    }
  }

  // Create a Drupal user if necessary.
  if (!$account = user_load_by_mail($formelements['email']['value'])) {

    // Generate a random password
    $password = user_password(8);

    // Set up the user fields
    $fields = array(
      'name' => $formelements['email']['value'],
      'mail' => $formelements['email']['value'],
      'pass' => $password,
      'status' => 0,
      'init' => 'email address',
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        4 => 'Student',
      ),
    );

    // Create user
    $account = user_save('', $fields);
  }

  $fields = array(
    'status_id' => 0,
    'course_interested' => $formelements['course_interested']['value'],
    'course_date' => $formelements['course_date']['value'],
    'total_booking_fee' => $coursefee,
    'outstanding_fee' => $coursefee,
    'firstname' => $formelements['firstname']['value'],
    'lastname' => $formelements['lastname']['value'],
    'date_of_birth' => $formelements['date_of_birth']['value'],
    'email' => $formelements['email']['value'],
    'telephone' => $formelements['telephone']['value'],
    'address1' => $formelements['address1']['value'],
    'address2' => $formelements['address2']['value'],
    'town_city' => $formelements['town_city']['value'],
    'region' => $formelements['region']['value'],
    'postcode' => $formelements['postcode']['value'],
    'country' => $formelements['country']['value'],
    'created' => time(),
  );

  if (isset($_SESSION['booking_id']) && db_query("SELECT 1 FROM {ecl_bookings} WHERE booking_id = :bid",
            array(':bid' => $_SESSION['booking_id']))->fetchField()) {
    $bookingid = db_update('ecl_bookings')->fields($fields)
            ->condition('booking_id', $_SESSION['booking_id'], '=')->execute();
  } else {
    $bookingid = db_insert('ecl_bookings')->fields($fields)->execute();
    $_SESSION['booking_id'] = $bookingid;
  }

  // Send email to student
  $from = 'info@englishcollegelondon.co.uk';
  $to = $formelements['email']['value'];
  $subject = 'Booking Confirmation from English College London';
  $markup  = '<img src="' . $base_root . '/sites/all/modules/custom/ecl/img/ecl_logo.jpg" alt="English College London" style="display:block" width="125" height="125"/>';
  $markup .= '<h1>Booking Confirmation from English College London</h1>';
  $markup .= '<p>Thank you for enrolling on one of our courses. This email is confirmation of your booking.</p>';
  $markup .= "<p>Your booking ID is #{$bookingid}.</p>";
  $markup .= '<p>Your course details are provided below. If you have any questions or concerns before the start date of your course then please do not hesitate to contact us.</p>';
  $markup .= '<table>';
  $markup .= '<tr>';
  $markup .= '<td>Name:</td>';
  $markup .= "<td>{$formelements['firstname']['value']} {$formelements['lastname']['value']}</td>";
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>Course name:</td>';
  $markup .= "<td>{$formelements['course_interested']['value']}</td>";
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>Course date:</td>';
  $markup .= "<td>{$formelements['course_date']['value']}</td>";
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>Course fee:</td>';
  $markup .= "<td>&pound;{$coursefee}</td>";
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '</table>';
  $markup .= '<p>View our terms & conditions <a href="' . $base_root . '/terms-and-conditions">here</a>.</p>';
  $markup .= '<table style="width:400px" cellspacing="0" cellpadding="0" border="0">';
  $markup .= '<tbody>';
  $markup .= '<tr>';
  $markup .= '<td>';
  $markup .= '<p>Yours sincerely,</p>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>';
  $markup .= '<span style="font-family:Calibri;font-size:12pt;font-weight:bold;color:rgb(51,51,51)"><br/>English College London</span>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>';
  $markup .= '<span style="color:#333333;font-size:10pt;font-family:Calibri"><br/>T: <a href="denied:tel: +4402031375357" style="color:#06c">+44 (0) 20 3137 5357</a></span>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td>';
  $markup .= '<span style="color:#333333;font-size:10pt;font-family:Calibri">E: <a href="mailto:info@englishcollegelondon.co.uk" style="color:#06c">info@englishcollegelondon.co.uk</a></span>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<span style="color:#333333;font-size:10pt;font-family:Calibri">W: <a href="' . $base_root . '/" style="color:#06c">www.englishcollegelondon.co.uk</a></span>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td style="padding-top:10px;padding-bottom:6px" valign="middle">';
  $markup .= '<table cellspacing="0" cellpadding="0" border="0">';
  $markup .= '<tbody>';
  $markup .= '<tr>';
  $markup .= '<td style="padding-right:5px"><a href="https://www.facebook.com/English-College-London-128238164511375/"> <img style="display:block" src="' . $base_root . '/sites/all/modules/custom/ecl/img/facebook.jpg" alt="image" width="24" height="24"></a></td>';
  $markup .= '<td style="padding-right:5px"><a href="https://twitter.com/ECLondon_UK"> <img style="display:block" src="' . $base_root . '/sites/all/modules/custom/ecl/img/twitter.jpg" alt="image" width="24" height="24"></a></td>';
  $markup .= '<td style="padding-right:5px"><a href="https://www.youtube.com/channel/UCkFawZC4_sIZtiMoDlHDL8g"> <img style="display:block" src="' . $base_root . '/sites/all/modules/custom/ecl/img/youtube.jpg" alt="image" width="24" height="24"></a></td>';
  $markup .= '</tr>';
  $markup .= '</tbody>';
  $markup .= '</table>';
  $markup .= '</td>';
  $markup .= '</tr>';
  $markup .= '<tr>';
  $markup .= '<td style="max-width:400px;text-align:justify;border-top:1px solid rgb(169, 169, 169);padding-top:3px;font-size:8pt;color:rgb(136, 136, 136)" colspan="2"> <span style="font-family:Calibri;font-size:8pt;color:rgb(136, 136, 136)"><br/><strong>English College London is registered in the UK as company number 10988508 Bloomsbury Square, 4/4a Bloomsbury Way, London, WC1A 2RP. United Kingdom</strong><br><br>The information within this email is confidential and solely for the use of the intended recipient(s). If you receive this email in error, please notify the sender and delete the email from your system immediately. In such instances you must not make use of the email or its contents. Views expressed in this email do not necessarily reflect the views of English College London.<br><br></span></td>';
  $markup .= '</tr>';
  $markup .= '</tbody>';
  $markup .= '</table>';

  $body = $markup;

  simple_mail_send($from, $to, $subject, $body);
}

/**
 * Returns HTML for Course Bookings Administration Page
 *
 * @return string
 */
function ecl_show_course_bookings() {

  $sql = "SELECT eb.booking_id, eb.course_interested, eb.course_date, eb.firstname, eb.lastname,
                 eb.created AS booking_created, ebs.status_label AS status, total_booking_fee, outstanding_fee
            FROM {ecl_bookings} eb
            JOIN ecl_booking_status ebs ON ebs.status_id = eb.status_id
        ORDER BY booking_id DESC";

  $query = db_query($sql);
  $bookings = $query->fetchAll();

  $t = get_t();

  $markup = '<table>';
  $markup .= '<tr>';
  $markup .= "<th>{$t('Booking ID')}</th>";
  $markup .= "<th>{$t('Booking Date')}</th>";
  $markup .= "<th>{$t('Course')}</th>";
  $markup .= "<th>{$t('Course Date')}</th>";
  $markup .= "<th>{$t('Student Name')}</th>";
  $markup .= "<th>{$t('Total')}</th>";
  $markup .= "<th>{$t('Outstanding')}</th>";
  $markup .= "<th>{$t('Status')}</th>";
  $markup .= "<th>{$t('Actions')}</th>";
  $markup .= '</tr>';

  foreach ($bookings as $booking) {
    $markup .= '<tr>';
    $markup .= "<td>{$booking->booking_id}</td>";
    $markup .= '<td>' . date('F jS Y g:i A', $booking->booking_created) . '</td>';
    $markup .= "<td>{$booking->course_interested}</td>";
    $markup .= "<td>{$booking->course_date}</td>";
    $markup .= "<td>{$booking->firstname} {$booking->lastname}</td>";
    $markup .= "<td>&pound;{$booking->total_booking_fee}</td>";
    $markup .= "<td>&pound;{$booking->outstanding_fee}</td>";
    $markup .= "<td>{$booking->status}</td>";
    $markup .= "<td>";
    $markup .= "<a href='/admin/settings/ecl/coursebookings/{$booking->booking_id}'>View</a>";
    if ($booking->outstanding_fee > 0) {
      $markup .= " | <a href='/admin/settings/ecl/coursebookings/{$booking->booking_id}/payment'>Make payment</a>";
    }
    $markup .= "</td>";
    $markup .= '</tr>';
  }

  $markup .= '</table>';

  $form['bookingstable'] = array(
    '#markup' => $markup,
  );

  return $form;
}

/*
 * Returns ECL Worldpay Installation Id.
 *
 * @return int
 */
function ecl_get_worldpay_instid() {

  return 1260047;
}

/**
 * Implements hook_block_info().
 */
function ecl_block_info() {

  return array(
    'ecl_worldpay' => array(
      'info' => t('ECL Proceed to Worldpay'),
    ),
    'ecl_confirmation' => array(
      'info' => t('ECL Payment Confirmation'),
    ),
    'ecl_make_payment' => array(
      'info' => t('ECL Make Worldpay Payment'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function ecl_block_view($delta='') {
  $block = array();

  switch($delta) {
    case 'ecl_worldpay' :
      $block['content'] = array(
        drupal_get_form('ecl_worldpay_form'),
      );
      $path = drupal_get_path('module', 'ecl');
      $block['content']['#attached'] = array(
        'js' => array(
          array(
            'type' => 'file',
            'data' => $path . '/js/worldpay.js',
          ),
        ),
      );
      break;
    case 'ecl_make_payment' :
      $block['content'] = array(
        drupal_get_form('ecl_make_worldpay_payment_form'),
      );
      $path = drupal_get_path('module', 'ecl');
      $block['content']['#attached'] = array(
        'js' => array(
          array(
            'type' => 'file',
            'data' => $path . '/js/make-worldpay-payment.js',
          ),
        ),
      );
      break;
    case 'ecl_confirmation' :
      $block['content'] = array(
        '#markup' => ecl_payment_confirmation_content($_SESSION['booking_id']),
      );
      unset($_SESSION['booking_id']);
      break;
  }

  return $block;
}

/**
 * Proceed to Worldpay form
 *
 * @param array $form
 * @param array $form_state
 * @return array
 */
function ecl_worldpay_form($form, &$form_state) {
  global $base_url;
  global $base_path;

  $booking = db_select('ecl_bookings', 'b')
    ->fields('b')
    ->condition('booking_id', $_SESSION['booking_id'], '=')
    ->execute()
    ->fetchAssoc();

  if (variable_get('worldpay_mode') == 1) {
    $testmode = 0;
  } else {
    $testmode = 100;
  }

  $form['instId'] = array(
    '#value' => ecl_get_worldpay_instid(),
    '#type' => 'hidden',
  );

  $form['testMode'] = array(
    '#value' => $testmode,
    '#type' => 'hidden',
  );
  $form['cartId'] = array(
    '#value' => $booking['booking_id'],
    '#type' => 'hidden',
  );

  $form['MC_callback'] = array(
    '#value' => $base_url . $base_path . 'sites/all/modules/custom/ecl/confirm_wp.php',
    '#type' => 'hidden',
  );

  $form['amount'] = array(
    '#value' => $booking['total_booking_fee'],
    '#type' => 'hidden'
  );

  $form['currency'] = array(
    '#value' => 'GBP',
    '#type' => 'hidden',
  );

  $form['name'] = array(
    '#value' => $booking['firstname'] . ' ' . $booking['lastname'],
    '#type' => 'hidden',
  );

  $form['desc'] = array(
    '#value' => "{$booking['course_interested']} on {$booking['course_date']}",
    '#type' => 'hidden',
  );

  $form['confirm_url'] = array(
    '#value' => $base_url . $base_path . 'payment-response',
    '#type' => 'hidden',
  );

  $form['cancel_url'] = array(
    '#value' => $base_url . $base_path . 'payment-cancelled',
    '#type' => 'hidden',
  );

  $form['status_url'] = array(
    '#value' => 'ed@theteflacademy.com', # <-- not sure
    '#type' => 'hidden',
  );

  $form['address1'] = array(
    '#value' => $booking['address1'],
    '#type' => 'hidden',
  );

  $form['address2'] = array(
    '#value' => $booking['address2'],
    '#type' => 'hidden',
  );

  $form['town'] = array(
    '#value' => $booking['town_city'],
    '#type' => 'hidden',
  );

  $form['region'] = array(
   '#value' => $booking['region'],
   '#type' => 'hidden',
  );

  $form['postcode'] = array(
    '#value' => $booking['postcode'],
    '#type' => 'hidden',
  );

  $form['country'] = array(
    '#value' => $booking['country'],
    '#type' => 'hidden',
  );

  $form['tel'] = array(
    '#value' => $booking['telephone'],
    '#type' => 'hidden',
  );

  $form['email'] = array(
    '#value' => $booking['email'],
    '#type' => 'hidden',
  );

  return $form;
}

/**
 * Implements hook_form_alter().
 */
function ecl_form_alter(&$form, $form_state, $form_id) {

  switch ($form_id) {
    case 'ecl_worldpay_form' :
    case 'ecl_make_worldpay_payment_form' :

      if (variable_get('worldpay_mode') == 1) {
        $formurl = 'https://secure.worldpay.com/wcc/purchase';
      } else {
        $formurl = 'https://secure-test.worldpay.com/wcc/purchase';
      }

      $form['#action'] = url($formurl, array('external' => true));

      break;
    case 'webform_client_form_90' :

      $form['submitted']['course_date']['#options'] = ecl_course_date_options();

      break;
    }
}
