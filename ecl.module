<?php

/**
 * Implements hook_permission().
 */
function ecl_permission() {
  return array(
    'Modify English College London settings' =>  array(
      'title' => t('Modify English College London settings'),
      'description' => t('Administer English College London settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ecl_menu() {

  $items = array();

  $items['admin/settings/ecl'] = array(
    'title' => 'English College London',
    'description' => 'English College London module overview',
    'page arguments' => array('ecl_overview'),
    'access arguments' => array('Modify English College London settings'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/settings/ecl/options'] = array(
    'title' => 'Options',
    'weight' => 0,
    'description' => 'English College London module options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecl_admin'),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ecl/coursebookings'] = array(
    'title' => 'Bookings',
    'weight' => 1,
    'description' => 'English College London Show Course Bookings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ecl_show_course_bookings'),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/settings/ecl/coursebookings/%'] = array(
    'title' => 'Course Booking',
    'description' => 'English College London Show Course Booking Information',
    'page callback' => 'ecl_show_course_booking_details',
    'page arguments' => array(4),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/settings/ecl/coursebookings/%/payment'] = array(
    'title' => 'Make Course Booking Payment',
    'description' => 'English College London Make Course Booking Payment',
    'page callback' => 'ecl_make_course_booking_payment',
    'page arguments' => array(4),
    'access arguments' => array('Modify English College London settings'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_admin().
 */
function ecl_admin() {

  $form = array();


  $form['online_payment_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Online payment options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['online_payment_options']['online_payment_functionality'] = array(
    '#type' => 'select',
    '#title' => t('Online payment functionality'),
    '#options' => array(
      0 => t('Disabled'),
      1 => t('Enabled'),
    ),
    '#default_value' => variable_get('online_payment_functionality', 0),
    '#description' => t('Whether or not the payment functionality is enabled.'),
    '#required' => TRUE,
  );

  $form['worldpay_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Worldpay options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['worldpay_options']['worldpay_mode'] = array(
    '#type' => 'select',
    '#title' => t('Worldpay mode'),
    '#options' => array(
      0 => t('Test'),
      1 => t('Live'),
    ),
    '#default_value' => variable_get('worldpay_mode', 0),
    '#description' => t('The Worldpay system used to process payments.'),
    '#required' => TRUE,
  );

  $form['emails'] = array(
    '#type' => 'fieldset',
    '#title' => t('Emails'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['emails']['booking_notifications'] = array(
    '#type' => 'textfield',
    '#title' => t('Booking Notification Email'),
    '#default_value' => variable_get('booking_notifications', 'info@englishcollegelondon.co.uk'),
    '#size' => 64,
    '#maxlength' => 64,
    '#description' => t("The email address where booking notification emails are sent."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_form_alter().
 */
function ecl_form_alter(&$form, $form_state, $form_id) {

  switch ($form_id) {
    case 'ecl_worldpay_form' :

      if (variable_get('worldpay_mode') == 1) {
        $formurl = 'https://secure.worldpay.com/wcc/purchase';
      } else {
        $formurl = 'https://secure-test.worldpay.com/wcc/purchase';
      }

      $form['#action'] = url($formurl, array('external' => true));

      break;
    }
}

/**
 * Implements hook_webform_submission_insert().
 */
function ecl_webform_submission_insert($node, $submission) {

  // Create a Drupal user if necessary.
  if (!$account = user_load_by_mail($formelements['email']['value'])) {

    // Generate a random password
    $password = user_password(8);

    // Set up the user fields
    $fields = array(
      'name' => $formelements['email']['value'],
      'mail' => $formelements['email']['value'],
      'pass' => $password,
      'status' => 0,
      'init' => 'email address',
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        4 => 'Student',
      ),
    );

    // Create user
    $account = user_save('', $fields);
  }

  $formelements = array();
  for ($i=1; $i<=count($node->webform['components']); $i++) {
    if ($node->webform['components'][$i]['form_key'] != 'message') {
      $formelements[$node->webform['components'][$i]['form_key']] = array(
        'name' => $node->webform['components'][$i]['name'],
        'value' => $submission->data[$i][0]
      );
    }
  }

  $fields = array(
    'status_id' => 0,
    'course_interested' => $formelements['course_interested']['value'],
    'course_date' => $formelements['course_date']['value'],
    'total_booking_fee' => 100,
    'outstanding_fee' => 100,
    'firstname' => $formelements['firstname']['value'],
    'lastname' => $formelements['lastname']['value'],
    'date_of_birth' => $formelements['date_of_birth']['value'],
    'gender' => $formelements['gender']['value'],
    'nationality' => $formelements['nationality']['value'],
    'passport_or_id_number' => $formelements['passport_or_id_number']['value'],
    'email' => $formelements['email']['value'],
    'telephone' => $formelements['telephone']['value'],
    'address1' => $formelements['address1']['value'],
    'address2' => $formelements['address2']['value'],
    'towncity' => $formelements['towncity']['value'],
    'region' => $formelements['region']['value'],
    'postcode' => $formelements['postcode']['value'],
    'country' => $formelements['country']['value'],
    'created' => time(),
  );

  if (isset($_SESSION['booking_id']) && db_query("SELECT 1 FROM {ecl_bookings} WHERE booking_id = :bid",
            array(':bid' => $_SESSION['booking_id']))->fetchField()) {
    $bookingid = db_update('ecl_bookings')->fields($fields)
            ->condition('booking_id', $_SESSION['booking_id'], '=')->execute();
  } else {
    $bookingid = db_insert('ecl_bookings')->fields($fields)->execute();
    $_SESSION['booking_id'] = $bookingid;
  }
}
